# -*- coding: utf-8 -*-
"""Combining Nuclei and Cytoplasm Images.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dOT7lD5FdJlLmyhFuFjtUDrhX5cwpS1f

# **Combining Nuclei and Cytoplasm Images**

I used image set BBBC008v1 (Carpenter et al., Genome Biology, 2006), available from the Broad Bioimage Benchmark Collection[Ljosa et al., Nature Methods, 2012].
"""

from PIL import Image
from skimage import exposure

import matplotlib.pyplot as plt
import numpy as np

import glob

ch1_files = glob.glob('/content/human_ht29_colon_cancer_2_images/*channel1.tif')
ch3_files = glob.glob('/content/human_ht29_colon_cancer_2_images/*channel3.tif')

print(ch1_files[0], ":", ch3_files[0], "\n")

ch1_files.sort()
ch3_files.sort()

print("Correctly paired....\n")
print(ch1_files[0], ":", ch3_files[0], "\n")
print(ch1_files[11], ":", ch3_files[11], "\n")

im1 = Image.open(ch1_files[0])
im3 = Image.open(ch3_files[0])

fig, axs = plt.subplots(1, 2, dpi = 300, figsize = (6, 6))
axs[0].imshow(im1)
axs[1].imshow(im3)

type(im1)

data1 = np.asarray(im1)
data3 = np.asarray(im3)

print('Image has', data1.shape[0], 'by', data1.shape[1], 'pixels')
print('')
print('Total number of pixels is', data1.size)

data = np.zeros((data1.shape[0], data1.shape[0], 3))

data[:,:,0] = data1
data[:,:,2] = data3

im = Image.fromarray(np.uint8(data))

fig, axs = plt.subplots(1, 3, dpi = 400)

axs[0].imshow(data1)
axs[1].imshow(data3)
axs[2].imshow(im)

im